import logging
import os
import sqlite3
from telegram import ReplyKeyboardMarkup
from telegram.ext import CommandHandler, MessageHandler, Filters, Updater
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()
secret_token = os.getenv('TELEGRAM_TOKEN')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def get_random_word_esp():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∏—Å–ø–∞–Ω—Å–∫–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞."""
    try:
        conn = sqlite3.connect('words.db')
        c = conn.cursor()
        c.execute('SELECT spanish, russian FROM words ORDER BY RANDOM() LIMIT 1')
        word = c.fetchone()
        logger.info("–ò—Å–ø–∞–Ω—Å–∫–æ–µ —Å–ª–æ–≤–æ –ø–æ–ª—É—á–µ–Ω–æ: %s", word)
    except sqlite3.Error as e:
        logger.error(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        word = None
    finally:
        conn.close()
    return word

def get_random_word_rus():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞."""
    try:
        conn = sqlite3.connect('words.db')
        c = conn.cursor()
        c.execute('SELECT russian, spanish FROM words ORDER BY RANDOM() LIMIT 1')
        word = c.fetchone()
        logger.info("–†—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ –ø–æ–ª—É—á–µ–Ω–æ: %s", word)
    except sqlite3.Error as e:
        logger.error(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        word = None
    finally:
        conn.close()
    return word

def start(update, context):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    chat = update.effective_chat
    name = update.message.chat.first_name
    button = ReplyKeyboardMarkup([
        ['ESP_RUS'],
        ['RUS_ESP'],
        ['–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫']
        ],
        resize_keyboard=True
    )

    context.bot.send_message(
        chat_id=chat.id,
        text=f'–ü—Ä–∏–≤–µ—Ç, {name} üññ\n'
             '–î–∞–≤–∞–π –ø–æ—É–ø—Ä–∞–∂–Ω—è–µ–º—Å—è –≤ –∏—Å–ø–∞–Ω—Å–∫–æ–º! üá™üá¶ '
             '–Ø –±—É–¥—É –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ, –∞ —Ç—ã –±—É–¥–µ—à—å –ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –æ—Ç–≤–µ—Ç –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥.\n'
             '\n–í—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞, –Ω–∞–∂–∞–≤ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:\n'
             'üí° –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏—Å–ø–∞–Ω—Å–∫–∏–µ —Å–ª–æ–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π;\n'
             'üí° –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ä—É—Å—Å–∫–∏–µ —Å–ª–æ–≤–∞ –Ω–∞ –∏—Å–ø–∞–Ω—Å–∫–∏–π;\n'
             'üîÑ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞.',
        reply_markup=button
    )
    context.user_data.clear()  # –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è —á–∞—Ç–∞ %s", chat.id)

def handle_message(update, context):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    text = update.message.text
    chat_id = update.effective_chat.id

    if text in ['ESP_RUS', 'RUS_ESP']:
        # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã
        if text == 'ESP_RUS':
            word = get_random_word_esp()
            if word:
                spanish_word, russian_word = word
                context.user_data['selected_word'] = russian_word
                context.user_data['mode'] = 'ESP_RUS'
                context.user_data.setdefault('history', []).append({'spanish': spanish_word, 'russian': russian_word, 'correct': None})
                context.user_data['word_count'] = 0
                context.user_data['session_active'] = True
                context.bot.send_message(chat_id=chat_id, text=spanish_word)
                logger.info("–í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º ESP_RUS –¥–ª—è —á–∞—Ç–∞ %s", chat_id)
            else:
                context.bot.send_message(chat_id=chat_id, text="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤.")
                logger.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ ESP_RUS")
        elif text == 'RUS_ESP':
            word = get_random_word_rus()
            if word:
                russian_word, spanish_word = word
                context.user_data['selected_word'] = spanish_word
                context.user_data['mode'] = 'RUS_ESP'
                context.user_data.setdefault('history', []).append({'russian': russian_word, 'spanish': spanish_word, 'correct': None})
                context.user_data['word_count'] = 0
                context.user_data['session_active'] = True
                context.bot.send_message(chat_id=chat_id, text=russian_word)
                logger.info("–í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º RUS_ESP –¥–ª—è —á–∞—Ç–∞ %s", chat_id)
            else:
                context.bot.send_message(chat_id=chat_id, text="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤.")
                logger.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ RUS_ESP")
    elif text == '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫':
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
        start(update, context)
        logger.info("–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –¥–ª—è —á–∞—Ç–∞ %s", chat_id)
    elif context.user_data.get('session_active', False):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
        user_answer = text.lower()
        correct_answer = context.user_data.get('selected_word', '').lower()
        
        if user_answer == correct_answer:
            bot_response = '‚úÖ *–í–µ—Ä–Ω–æ*! –°–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ:'
            correct = True
        else:
            bot_response = f'‚ùå *–ù–µ–≤–µ—Ä–Ω–æ*. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}.\n\n–ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ:'
            correct = False

        context.bot.send_message(chat_id=chat_id, text=bot_response, parse_mode='Markdown')
        logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –æ—Ç–≤–µ—Ç–∏–ª: '%s', –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: '%s'", chat_id, user_answer, correct_answer)

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        if 'history' in context.user_data and len(context.user_data['history']) > 0:
            context.user_data['history'][-1]['correct'] = correct

        # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Å–ª–æ–≤
        context.user_data['word_count'] = context.user_data.get('word_count', 0) + 1

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
        if context.user_data['word_count'] >= 10:
            incorrect_words = [entry for entry in context.user_data['history'] if not entry['correct']]
            result_message = '–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–æ—Ç –≤–∞—à–∏ –æ—à–∏–±–∫–∏:\n\n'
            for entry in incorrect_words:
                if context.user_data['mode'] == 'RUS_ESP':
                    result_message += f"{entry['russian']} -> {entry['spanish']}\n"
                else:
                    result_message += f"{entry['spanish']} -> {entry['russian']}\n"
            if not incorrect_words:
                result_message += "–ù–µ—Ç –æ—à–∏–±–æ–∫! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!"
            context.bot.send_message(chat_id=chat_id, text=result_message)
            logger.info("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è —á–∞—Ç–∞ %s. –û—à–∏–±–∫–∏: %s", chat_id, incorrect_words)
            # –°–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏
            context.user_data.clear()
        else:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ª–æ–≤–∞
            if context.user_data.get('mode') == 'RUS_ESP':
                word = get_random_word_rus()
                if word:
                    russian_word, spanish_word = word
                    context.user_data['selected_word'] = spanish_word
                    context.user_data.setdefault('history', []).append({'russian': russian_word, 'spanish': spanish_word, 'correct': None})
                    context.bot.send_message(chat_id=chat_id, text=russian_word)
                    logger.info("–°–ª–µ–¥—É—é—â–µ–µ —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ –¥–ª—è —á–∞—Ç–∞ %s: %s", chat_id, russian_word)
                else:
                    context.bot.send_message(chat_id=chat_id, text="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤.")
                    logger.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ RUS_ESP")
            else:
                word = get_random_word_esp()
                if word:
                    spanish_word, russian_word = word
                    context.user_data['selected_word'] = russian_word
                    context.user_data.setdefault('history', []).append({'spanish': spanish_word, 'russian': russian_word, 'correct': None})
                    context.bot.send_message(chat_id=chat_id, text=spanish_word)
                    logger.info("–°–ª–µ–¥—É—é—â–µ–µ –∏—Å–ø–∞–Ω—Å–∫–æ–µ —Å–ª–æ–≤–æ –¥–ª—è —á–∞—Ç–∞ %s: %s", chat_id, spanish_word)
                else:
                    context.bot.send_message(chat_id=chat_id, text="–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤.")
                    logger.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ä–µ–∂–∏–º–∞ ESP_RUS")
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
        context.bot.send_message(chat_id=chat_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏–∑ –º–µ–Ω—é.")
        logger.info("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s –≤–Ω–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏: '%s'. –ü–æ–∫–∞–∑–∞–Ω—ã –∫–Ω–æ–ø–∫–∏.", chat_id, text)

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
    updater = Updater(token=secret_token)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    updater.dispatcher.add_handler(CommandHandler('start', start))
    updater.dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
